## Load Libraries
# rm(list = ls())
Libraries = c("knitr", "readr")
for(p in Libraries){  # Install Library if not present
if(!require(p, character.only = TRUE)) { install.packages(p) }
library(p, character.only = TRUE)
}
opts_chunk$set(cache = TRUE)
keep <- "rowIndex"
logit <- read_csv("../00-data/03-outliers/fp_fn_logit.csv")
logit <- sort(unique(unlist(logit[, keep], use.names = FALSE)))
logit_loads <- merge(x = logit_nums_copy, y = pc_1_2_values_copy, by = "rowNum")
## Load Libraries
# rm(list = ls())
Libraries = c("knitr", "readr")
for(p in Libraries){  # Install Library if not present
if(!require(p, character.only = TRUE)) { install.packages(p) }
library(p, character.only = TRUE)
}
opts_chunk$set(cache = TRUE)
keep <- "rowIndex"
logit <- read_csv("../00-data/03-outliers/fp_fn_logit.csv")
logit <- sort(unique(unlist(logit[, keep], use.names = FALSE)))
#logit_loads <- merge(x = logit_nums_copy, y = pc_1_2_values_copy, by = "rowNum")
write_csv(x = as.data.frame(logit),
path = "../00-data/04-ordered_unique_outliers/logit_nums.csv")
write.table(c(df, df1),
file = "../00-data/04-ordered_unique_outliers/logit_nums.csv",
col.names = c("A","B"),
sep = ",",
row.names = F)
## Load Libraries
# rm(list = ls())
Libraries = c("knitr", "readr")
for(p in Libraries){  # Install Library if not present
if(!require(p, character.only = TRUE)) { install.packages(p) }
library(p, character.only = TRUE)
}
opts_chunk$set(cache = TRUE)
keep <- "rowIndex"
logit <- read_csv("../00-data/03-outliers/fp_fn_logit.csv")
logit <- sort(unique(unlist(logit[, keep], use.names = FALSE)))
#logit_loads <- merge(x = logit_nums_copy, y = pc_1_2_values_copy, by = "rowNum")
write_csv(x = as.data.frame(logit),
path = "../00-data/04-ordered_unique_outliers/logit_nums.csv")
# write.table(c(df, df1),
#             file = "../00-data/04-ordered_unique_outliers/logit_nums.csv",
#             col.names = c("A","B"),
#             sep = ",",
#             row.names = F)
length(logit)
logit # Display numbers
rf <- read_csv("../00-data/03-outliers/fp_fn_r_forest.csv")
rf <- sort(unique(unlist(rf[, keep], use.names = FALSE)))
write_csv(x = as.data.frame(rf),
path = "../00-data/04-ordered_unique_outliers/r_f_nums.csv")
length(rf)
rf # Display numbers
svm_lin <- read_csv("../00-data/03-outliers/fp_fn_svm_linear.csv")
svm_lin <- sort(unique(unlist(svm_lin[, keep], use.names = FALSE)))
write_csv(x = as.data.frame(svm_lin),
path = "../00-data/04-ordered_unique_outliers/svm_lin_nums.csv")
length(svm_lin)
svm_lin # Display numbers
svm_poly <- read_csv("../00-data/03-outliers/fp_fn_svm_poly.csv")
svm_poly <- sort(unique(unlist(svm_poly[, keep], use.names = FALSE)))
write_csv(x = as.data.frame(svm_poly),
path = "../00-data/04-ordered_unique_outliers/svm_poly_nums.csv")
length(svm_poly)
svm_poly # Display numbers
svm_rbf <- read_csv("../00-data/03-outliers/fp_fn_svmRadialCost.csv")
svm_rbf <- sort(unique(unlist(svm_rbf[, keep], use.names = FALSE)))
write_csv(x = as.data.frame(svm_rbf),
path = "../00-data/04-ordered_unique_outliers/svm_rbf_nums.csv")
length(svm_rbf)
svm_rbf # Display numbers
pca <- t(read_csv("../00-data/03-outliers/pca_1_2_outliers.csv"))
write_csv(x = as.data.frame(pca),
path = "../00-data/04-ordered_unique_outliers/pca_nums.csv")
length(pca)
# pca # Display numbers
c_m_TRANSFORMED <- read_csv("../00-data/02-aac_dpc_values/c_m_TRANSFORMED.csv",
col_types = cols(Class = col_skip(),
PID = col_skip(),
TotalAA = col_skip()))
# View(c_m_TRANSFORMED)
pca_values <- prcomp(c_m_TRANSFORMED, scale = TRUE)
pc_1_2_values <- cbind(1:2340, pca_values$x[,1], pca_values$x[,2])
dim(pc_1_2_values)
write_csv(x = as.data.frame(pc_1_2_values),
path = "../00-data/04-ordered_unique_outliers/pc_1_2_values.csv")
logit_loads <- merge(x = logit_nums_copy, y = pc_1_2_values_copy, by = "rowNum")
